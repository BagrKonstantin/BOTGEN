services:
  user-db:
    image: postgres:13.3
    environment:
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    restart: unless-stopped
    ports:
      - "127.0.0.1:${POSTGRESQL_PORT}:${POSTGRESQL_PORT}"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672"
      - "15672"
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

  backend:
    build:
      context: ./Backend
    container_name: backend_service
    command: uvicorn main:app --host=0.0.0.0 --port ${BACKEND_PORT}
    env_file:
      - .env
    environment:
      POSTGRESQL_HOST: user-db
      RABBITMQ_HOST: rabbitmq
      HOSTING_HOST: hosting
      HOSTING_PORT: ${HOSTING_PORT}
    ports:
      - "127.0.0.1:${BACKEND_PORT}:${BACKEND_PORT}"
    restart: unless-stopped
    depends_on:
      - user-db
      - rabbitmq

  hosting:
    build:
      context: ./Hosting
    container_name: hosting_service
    command: uvicorn main:app --host=0.0.0.0 --port ${HOSTING_PORT}
    env_file:
      - .env
    environment:
      POSTGRESQL_HOST: user-db
      RABBITMQ_HOST: rabbitmq
    ports:
      - "127.0.0.1:${HOSTING_PORT}:${HOSTING_PORT}"
    depends_on:
      - user-db
      - rabbitmq
    restart: unless-stopped

  telegrambot:
    build:
      context: ./TelegramBot
    container_name: telegrambot_service
    command: python main.py
    env_file:
      - .env
    environment:
      POSTGRESQL_HOST: user-db
      RABBITMQ_HOST: rabbitmq
    restart: unless-stopped
    depends_on:
      - rabbitmq
